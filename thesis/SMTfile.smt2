(set-option :count-models true)
(set-logic QF_BV)
(set-option :print-clauses-file "./counts.cnf")(set-info :smt-lib-version 2.0)
(declare-fun rho_1 () (_ BitVec 32))
(declare-fun rho_2 () (_ BitVec 32))
(declare-fun phi_1 () Bool)
(declare-fun phi_2 () Bool)
(declare-fun districtid () (_ BitVec 32))
(declare-fun warehouseid () (_ BitVec 32))
(declare-fun districtidGV () (_ BitVec 32))
(declare-fun warehouseidGV () (_ BitVec 32))
(assert (= rho_1 (bvadd (! districtid :named v1) (bvmul (! warehouseid :named v2) #b00000000000000000000000001100100))))
(assert (= rho_2 (bvadd districtidGV (bvmul warehouseidGV #b00000000000000000000000001100100))))
(assert (= phi_1 (and (bvult districtid #b00000000000000000000000000001010)(and (bvult #b00000000000000000000000000000000 warehouseid) (bvult warehouseid #b00000000000000000000000000000010)))))
(assert (= phi_2 (and (bvult districtidGV #b00000000000000000000000000001010)(and (bvult #b00000000000000000000000000000000 warehouseidGV) (bvult warehouseidGV #b00000000000000000000000000000010)))))
(assert (and (= rho_1 rho_2) (and phi_1 phi_2)))
(count-models v1 v2)
(exit)